// <auto-generated />
using System;
using FemdAPI.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FemdAPI.Api.Migrations
{
    [DbContext(typeof(FemdApiContext))]
    [Migration("20201016163857_poczatkowa")]
    partial class poczatkowa
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FemdAPI.Core.Domains.Lecture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LectureDbSet");
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.Noun", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Feminine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenderNeutral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Masculine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WordsDictonaryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WordsDictonaryId");

                    b.ToTable("NounDbSet");
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UserDbSet");
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.Verb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Infinitive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastPartizip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PastPrateritum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("WordsDictonaryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WordsDictonaryId");

                    b.ToTable("VerbDbSet");
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.WordsDictionary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LectureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LectureId")
                        .IsUnique();

                    b.ToTable("WordsDictionaryDbSet");
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.Noun", b =>
                {
                    b.HasOne("FemdAPI.Core.Domains.WordsDictionary", "WordsDictionary")
                        .WithMany("Nouns")
                        .HasForeignKey("WordsDictonaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.Verb", b =>
                {
                    b.HasOne("FemdAPI.Core.Domains.WordsDictionary", "WordsDictionary")
                        .WithMany("Verbs")
                        .HasForeignKey("WordsDictonaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FemdAPI.Core.Domains.WordsDictionary", b =>
                {
                    b.HasOne("FemdAPI.Core.Domains.Lecture", "Lecture")
                        .WithOne("WordsDictionary")
                        .HasForeignKey("FemdAPI.Core.Domains.WordsDictionary", "LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
